(declare-datatypes ((_tuple_2 0)) (((_tuple_2 (__f1 Int) (__f2 Int) (__f3 Int) (__f4 Int) (__f5 Int)))))
(declare-datatypes ((_tuple_1 0)) (((_tuple_1 (__f1 Int) (__f2 Int)))))
(declare-datatypes ((_enum_0 0)) (((pipe_reaction_0) (pipe_reaction_1) (pipe_node_1_reaction_1) (pipe_node_1_reaction_0) (NULL))))
(declare-datatypes ((_tuple_0 0)) (((_tuple_0 (__f1 _enum_0) (__f2 _tuple_1) (__f3 _tuple_2)))))
(declare-datatypes ((_tuple_3 0)) (((_tuple_3 (__f1 _tuple_0) (__f2 _tuple_0) (__f3 _tuple_0) (__f4 _tuple_0) (__f5 _tuple_0) (__f6 _tuple_0)))))
(declare-fun initial_1_start () Int)
(declare-fun initial_2_trace () _tuple_3)
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 5))))
           (a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (_tuple_0 NULL
                                    (_tuple_1 (- 1) 0)
                                    (_tuple_2 0 0 0 0 0))))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2)))))
     (let ((a!4 (__f1 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3))))
           (a!5 (__f2 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3))))
           (a!6 (= (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   (_tuple_1 initial_1_start 0))))
       (or a!1
           (and (not (<= 0 a!4)) (<= 0 initial_1_start))
           (and (= a!4 initial_1_start) (not (<= a!5 0)))
           (not (<= a!4 initial_1_start))
           a!6))))
     :skolemid _skolem_0
     :qid _forall_0)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 5))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
           (a!8 (exists ((j Int))
                  (! (let ((a!1 (_tuple_0 NULL
                                          (_tuple_1 (- 1) 0)
                                          (_tuple_2 0 0 0 0 0))))
                     (let ((a!2 (ite (= j 3)
                                     (__f4 initial_2_trace)
                                     (ite (= j 4)
                                          (__f5 initial_2_trace)
                                          (ite (= j 5)
                                               (__f6 initial_2_trace)
                                               a!1))))
                           (a!4 (ite (= i 3)
                                     (__f4 initial_2_trace)
                                     (ite (= i 4)
                                          (__f5 initial_2_trace)
                                          (ite (= i 5)
                                               (__f6 initial_2_trace)
                                               a!1)))))
                     (let ((a!3 (ite (= j 0)
                                     (__f1 initial_2_trace)
                                     (ite (= j 1)
                                          (__f2 initial_2_trace)
                                          (ite (= j 2)
                                               (__f3 initial_2_trace)
                                               a!2))))
                           (a!5 (ite (= i 0)
                                     (__f1 initial_2_trace)
                                     (ite (= i 1)
                                          (__f2 initial_2_trace)
                                          (ite (= i 2)
                                               (__f3 initial_2_trace)
                                               a!4)))))
                     (let ((a!6 (_tuple_1 (__f1 (__f2 a!5))
                                          (+ 1 (__f2 (__f2 a!5))))))
                     (let ((a!7 (ite (<= 0 (__f1 (__f2 a!5)))
                                     a!6
                                     (_tuple_1 (- 1) 0))))
                       (and (not (<= j i))
                            (<= j 5)
                            (= (__f1 a!3) pipe_node_1_reaction_1)
                            (= (__f2 a!3) a!7)))))))
                     :skolemid _skolem_1
                     :qid _exists_0))))
     (let ((a!3 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!2))))
           (a!5 (ite (= i 4)
                     (__f4 initial_2_trace)
                     (ite (= i 5)
                          (__f5 initial_2_trace)
                          (ite (= i 6) (__f6 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!3))))
           (a!6 (ite (= i 1)
                     (__f1 initial_2_trace)
                     (ite (= i 2)
                          (__f2 initial_2_trace)
                          (ite (= i 3) (__f3 initial_2_trace) a!5)))))
     (let ((a!7 (= (__f2 (__f3 a!4)) (+ 1 (__f2 (__f3 a!6))))))
     (let ((a!9 (and (= (__f3 (__f3 a!4)) (__f5 (__f3 a!4)))
                     a!7
                     a!8
                     (= (__f1 (__f3 a!4)) (__f1 (__f3 a!6)))
                     (= (__f4 (__f3 a!4)) (__f4 (__f3 a!6))))))
       (or a!1 (not (= (__f1 a!4) pipe_node_1_reaction_0)) a!9))))))
     :skolemid _skolem_2
     :qid _forall_1)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 5))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!3 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!2))))
           (a!5 (ite (= i 4)
                     (__f4 initial_2_trace)
                     (ite (= i 5)
                          (__f5 initial_2_trace)
                          (ite (= i 6) (__f6 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!3))))
           (a!6 (ite (= i 1)
                     (__f1 initial_2_trace)
                     (ite (= i 2)
                          (__f2 initial_2_trace)
                          (ite (= i 3) (__f3 initial_2_trace) a!5)))))
       (or a!1
           (= (__f1 a!4) pipe_reaction_0)
           (= (__f5 (__f3 a!4)) (__f5 (__f3 a!6)))))))
     :skolemid _skolem_3
     :qid _forall_2)))
(assert (forall ((j Int))
  (! (let ((a!1 (not (and (not (<= j 0)) (<= j 5))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!3 (ite (= j 3)
                     (__f4 initial_2_trace)
                     (ite (= j 4)
                          (__f5 initial_2_trace)
                          (ite (= j 5) (__f6 initial_2_trace) a!2))))
           (a!5 (ite (= j 4)
                     (__f4 initial_2_trace)
                     (ite (= j 5)
                          (__f5 initial_2_trace)
                          (ite (= j 6) (__f6 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= j 0)
                     (__f1 initial_2_trace)
                     (ite (= j 1)
                          (__f2 initial_2_trace)
                          (ite (= j 2) (__f3 initial_2_trace) a!3))))
           (a!6 (ite (= j 1)
                     (__f1 initial_2_trace)
                     (ite (= j 2)
                          (__f2 initial_2_trace)
                          (ite (= j 3) (__f3 initial_2_trace) a!5)))))
       (or a!1 (not (= (__f1 a!4) NULL)) (= (__f3 a!4) (__f3 a!6))))))
     :skolemid _skolem_4
     :qid _forall_3)))
(assert true)
(assert (forall ((i Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
           (a!4 (exists ((j Int))
                  (! (let ((a!1 (_tuple_0 NULL
                                          (_tuple_1 (- 1) 0)
                                          (_tuple_2 0 0 0 0 0))))
                     (let ((a!2 (ite (= j 3)
                                     (__f4 initial_2_trace)
                                     (ite (= j 4)
                                          (__f5 initial_2_trace)
                                          (ite (= j 5)
                                               (__f6 initial_2_trace)
                                               a!1))))
                           (a!4 (ite (= i 3)
                                     (__f4 initial_2_trace)
                                     (ite (= i 4)
                                          (__f5 initial_2_trace)
                                          (ite (= i 5)
                                               (__f6 initial_2_trace)
                                               a!1)))))
                     (let ((a!3 (ite (= j 0)
                                     (__f1 initial_2_trace)
                                     (ite (= j 1)
                                          (__f2 initial_2_trace)
                                          (ite (= j 2)
                                               (__f3 initial_2_trace)
                                               a!2))))
                           (a!5 (ite (= i 0)
                                     (__f1 initial_2_trace)
                                     (ite (= i 1)
                                          (__f2 initial_2_trace)
                                          (ite (= i 2)
                                               (__f3 initial_2_trace)
                                               a!4)))))
                     (let ((a!6 (ite (<= 0 (__f1 (__f2 a!3)))
                                     (_tuple_1 (__f1 (__f2 a!3))
                                               (__f2 (__f2 a!3)))
                                     (_tuple_1 (- 1) 0))))
                       (and (>= j 0)
                            (<= j 5)
                            (= (__f1 a!3) pipe_reaction_0)
                            (= (__f2 a!5) a!6))))))
                     :skolemid _skolem_6
                     :qid _exists_1))))
     (let ((a!2 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!2)))))
       (or (not (= (__f1 a!3) pipe_node_1_reaction_0))
           (not (and (>= i 0) (<= i 5)))
           a!4))))
     :skolemid _skolem_7
     :qid _forall_5)))
(assert (forall ((i Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
           (a!4 (exists ((j Int))
                  (! (let ((a!1 (_tuple_0 NULL
                                          (_tuple_1 (- 1) 0)
                                          (_tuple_2 0 0 0 0 0))))
                     (let ((a!2 (ite (= j 3)
                                     (__f4 initial_2_trace)
                                     (ite (= j 4)
                                          (__f5 initial_2_trace)
                                          (ite (= j 5)
                                               (__f6 initial_2_trace)
                                               a!1))))
                           (a!4 (ite (= i 3)
                                     (__f4 initial_2_trace)
                                     (ite (= i 4)
                                          (__f5 initial_2_trace)
                                          (ite (= i 5)
                                               (__f6 initial_2_trace)
                                               a!1)))))
                     (let ((a!3 (ite (= j 0)
                                     (__f1 initial_2_trace)
                                     (ite (= j 1)
                                          (__f2 initial_2_trace)
                                          (ite (= j 2)
                                               (__f3 initial_2_trace)
                                               a!2))))
                           (a!5 (ite (= i 0)
                                     (__f1 initial_2_trace)
                                     (ite (= i 1)
                                          (__f2 initial_2_trace)
                                          (ite (= i 2)
                                               (__f3 initial_2_trace)
                                               a!4)))))
                     (let ((a!6 (_tuple_1 (__f1 (__f2 a!3))
                                          (+ 1 (__f2 (__f2 a!3))))))
                     (let ((a!7 (ite (<= 0 (__f1 (__f2 a!3)))
                                     a!6
                                     (_tuple_1 (- 1) 0))))
                       (and (>= j 0)
                            (<= j 5)
                            (= (__f1 a!3) pipe_node_1_reaction_0)
                            (= (__f2 a!5) a!7)))))))
                     :skolemid _skolem_8
                     :qid _exists_2))))
     (let ((a!2 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!2)))))
       (or (not (and (>= i 0) (<= i 5)))
           (not (= (__f1 a!3) pipe_node_1_reaction_1))
           a!4))))
     :skolemid _skolem_9
     :qid _forall_6)))
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!2 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!1))))
           (a!4 (ite (= j 3)
                     (__f4 initial_2_trace)
                     (ite (= j 4)
                          (__f5 initial_2_trace)
                          (ite (= j 5) (__f6 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!2))))
           (a!5 (ite (= j 0)
                     (__f1 initial_2_trace)
                     (ite (= j 1)
                          (__f2 initial_2_trace)
                          (ite (= j 2) (__f3 initial_2_trace) a!4)))))
     (let ((a!6 (not (<= 0 (__f1 (__f2 a!5)))))
           (a!8 (not (<= (__f2 (__f2 a!5)) (__f2 (__f2 a!3)))))
           (a!10 (not (<= (__f1 (__f2 a!5)) (__f1 (__f2 a!3)))))
           (a!11 (or (and (= (__f1 a!3) pipe_node_1_reaction_1)
                          (= (__f1 a!5) pipe_reaction_1))
                     (and (= (__f1 a!3) pipe_reaction_0)
                          (= (__f1 a!5) pipe_node_1_reaction_0))
                     (and (= (__f1 a!3) pipe_node_1_reaction_0)
                          (= (__f1 a!5) pipe_node_1_reaction_1)))))
     (let ((a!7 (and (<= 0 (__f1 (__f2 a!3))) a!6))
           (a!9 (and (= (__f1 (__f2 a!3)) (__f1 (__f2 a!5))) a!8)))
     (let ((a!12 (or a!7 a!9 a!10 (and (= (__f2 a!3) (__f2 a!5)) a!11))))
       (or (not (<= j i))
           (not (and (>= i 0) (<= i 5) (>= j 0) (<= j 5)))
           (not a!12))))))))
     :skolemid _skolem_10
     :qid _forall_7)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 5))))
           (a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (_tuple_0 NULL
                                    (_tuple_1 (- 1) 0)
                                    (_tuple_2 0 0 0 0 0))))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2)))))
     (let ((a!4 (__f2 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3)))))
       (or a!1 (>= a!4 0)))))
     :skolemid _skolem_11
     :qid _forall_8)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 5))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!3 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!2))))
           (a!5 (ite (= i 4)
                     (__f4 initial_2_trace)
                     (ite (= i 5)
                          (__f5 initial_2_trace)
                          (ite (= i 6) (__f6 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!3))))
           (a!6 (ite (= i 1)
                     (__f1 initial_2_trace)
                     (ite (= i 2)
                          (__f2 initial_2_trace)
                          (ite (= i 3) (__f3 initial_2_trace) a!5)))))
     (let ((a!7 (= (__f2 (__f3 a!4)) (+ (- 1) (__f2 (__f3 a!6))))))
     (let ((a!8 (and (= (__f4 (__f3 a!4)) (__f3 (__f3 a!4)))
                     a!7
                     (= (__f1 (__f3 a!4)) (__f1 (__f3 a!6)))
                     (= (__f5 (__f3 a!4)) (__f5 (__f3 a!6))))))
       (or a!1 (not (= (__f1 a!4) pipe_node_1_reaction_1)) a!8))))))
     :skolemid _skolem_12
     :qid _forall_9)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 5))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
           (a!8 (exists ((j Int))
                  (! (let ((a!1 (_tuple_0 NULL
                                          (_tuple_1 (- 1) 0)
                                          (_tuple_2 0 0 0 0 0))))
                     (let ((a!2 (ite (= j 3)
                                     (__f4 initial_2_trace)
                                     (ite (= j 4)
                                          (__f5 initial_2_trace)
                                          (ite (= j 5)
                                               (__f6 initial_2_trace)
                                               a!1))))
                           (a!4 (ite (= i 3)
                                     (__f4 initial_2_trace)
                                     (ite (= i 4)
                                          (__f5 initial_2_trace)
                                          (ite (= i 5)
                                               (__f6 initial_2_trace)
                                               a!1)))))
                     (let ((a!3 (ite (= j 0)
                                     (__f1 initial_2_trace)
                                     (ite (= j 1)
                                          (__f2 initial_2_trace)
                                          (ite (= j 2)
                                               (__f3 initial_2_trace)
                                               a!2))))
                           (a!5 (ite (= i 0)
                                     (__f1 initial_2_trace)
                                     (ite (= i 1)
                                          (__f2 initial_2_trace)
                                          (ite (= i 2)
                                               (__f3 initial_2_trace)
                                               a!4)))))
                       (and (not (<= j i))
                            (<= j 5)
                            (= (__f1 a!3) pipe_node_1_reaction_0)
                            (= (__f2 a!3) (__f2 a!5))))))
                     :skolemid _skolem_13
                     :qid _exists_3))))
     (let ((a!3 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!2))))
           (a!5 (ite (= i 4)
                     (__f4 initial_2_trace)
                     (ite (= i 5)
                          (__f5 initial_2_trace)
                          (ite (= i 6) (__f6 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!3))))
           (a!6 (ite (= i 1)
                     (__f1 initial_2_trace)
                     (ite (= i 2)
                          (__f2 initial_2_trace)
                          (ite (= i 3) (__f3 initial_2_trace) a!5)))))
     (let ((a!7 (= (__f1 (__f3 a!4)) (+ 1 (__f1 (__f3 a!6))))))
     (let ((a!9 (and (= (__f5 (__f3 a!4)) (__f1 (__f3 a!4)))
                     a!7
                     a!8
                     (= (__f2 (__f3 a!4)) (__f2 (__f3 a!6)))
                     (= (__f3 (__f3 a!4)) (__f3 (__f3 a!6)))
                     (= (__f4 (__f3 a!4)) (__f4 (__f3 a!6))))))
       (or a!1 (not (= (__f1 a!4) pipe_reaction_0)) a!9))))))
     :skolemid _skolem_14
     :qid _forall_10)))
(assert (forall ((i Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
           (a!4 (exists ((j Int))
                  (! (let ((a!1 (_tuple_0 NULL
                                          (_tuple_1 (- 1) 0)
                                          (_tuple_2 0 0 0 0 0))))
                     (let ((a!2 (ite (= j 3)
                                     (__f4 initial_2_trace)
                                     (ite (= j 4)
                                          (__f5 initial_2_trace)
                                          (ite (= j 5)
                                               (__f6 initial_2_trace)
                                               a!1))))
                           (a!4 (ite (= i 3)
                                     (__f4 initial_2_trace)
                                     (ite (= i 4)
                                          (__f5 initial_2_trace)
                                          (ite (= i 5)
                                               (__f6 initial_2_trace)
                                               a!1)))))
                     (let ((a!3 (ite (= j 0)
                                     (__f1 initial_2_trace)
                                     (ite (= j 1)
                                          (__f2 initial_2_trace)
                                          (ite (= j 2)
                                               (__f3 initial_2_trace)
                                               a!2))))
                           (a!5 (ite (= i 0)
                                     (__f1 initial_2_trace)
                                     (ite (= i 1)
                                          (__f2 initial_2_trace)
                                          (ite (= i 2)
                                               (__f3 initial_2_trace)
                                               a!4)))))
                     (let ((a!6 (ite (<= 0 (__f1 (__f2 a!3)))
                                     (_tuple_1 (__f1 (__f2 a!3))
                                               (__f2 (__f2 a!3)))
                                     (_tuple_1 (- 1) 0))))
                       (and (>= j 0)
                            (<= j 5)
                            (= (__f1 a!3) pipe_node_1_reaction_1)
                            (= (__f2 a!5) a!6))))))
                     :skolemid _skolem_15
                     :qid _exists_4))))
     (let ((a!2 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!2)))))
       (or (not (and (>= i 0) (<= i 5)))
           (not (= (__f1 a!3) pipe_reaction_1))
           a!4))))
     :skolemid _skolem_16
     :qid _forall_11)))
(assert (let ((a!1 (exists ((i Int))
             (! (let ((a!1 (_tuple_0 NULL
                                     (_tuple_1 (- 1) 0)
                                     (_tuple_2 0 0 0 0 0)))
                      (a!4 (exists ((c Int))
                             (! (let ((a!1 (_tuple_0 NULL
                                                     (_tuple_1 (- 1) 0)
                                                     (_tuple_2 0 0 0 0 0)))
                                      (a!4 (not (<= initial_1_start
                                                    (+ (- 1000000000)
                                                       (* 1000000000 c))))))
                                (let ((a!2 (ite (= i 3)
                                                (__f4 initial_2_trace)
                                                (ite (= i 4)
                                                     (__f5 initial_2_trace)
                                                     (ite (= i 5)
                                                          (__f6 initial_2_trace)
                                                          a!1)))))
                                (let ((a!3 (ite (= i 0)
                                                (__f1 initial_2_trace)
                                                (ite (= i 1)
                                                     (__f2 initial_2_trace)
                                                     (ite (= i 2)
                                                          (__f3 initial_2_trace)
                                                          a!2)))))
                                  (and (= (* 1000000000 c) (__f1 (__f2 a!3)))
                                       a!4))))
                                :skolemid _skolem_17
                                :qid _exists_5))))
                (let ((a!2 (ite (= i 3)
                                (__f4 initial_2_trace)
                                (ite (= i 4)
                                     (__f5 initial_2_trace)
                                     (ite (= i 5) (__f6 initial_2_trace) a!1)))))
                (let ((a!3 (ite (= i 0)
                                (__f1 initial_2_trace)
                                (ite (= i 1)
                                     (__f2 initial_2_trace)
                                     (ite (= i 2) (__f3 initial_2_trace) a!2)))))
                  (and (>= i 0)
                       (<= i 5)
                       (= (__f1 a!3) pipe_reaction_0)
                       a!4
                       (= (__f2 (__f2 a!3)) 0)))))
                :skolemid _skolem_18
                :qid _exists_6)))
      (a!2 (forall ((i Int) (j Int))
             (! (let ((a!1 (_tuple_0 NULL
                                     (_tuple_1 (- 1) 0)
                                     (_tuple_2 0 0 0 0 0)))
                      (a!6 (exists ((k Int))
                             (! (let ((a!1 (_tuple_0 NULL
                                                     (_tuple_1 (- 1) 0)
                                                     (_tuple_2 0 0 0 0 0))))
                                (let ((a!2 (ite (= k 3)
                                                (__f4 initial_2_trace)
                                                (ite (= k 4)
                                                     (__f5 initial_2_trace)
                                                     (ite (= k 5)
                                                          (__f6 initial_2_trace)
                                                          a!1)))))
                                (let ((a!3 (ite (= k 0)
                                                (__f1 initial_2_trace)
                                                (ite (= k 1)
                                                     (__f2 initial_2_trace)
                                                     (ite (= k 2)
                                                          (__f3 initial_2_trace)
                                                          a!2)))))
                                  (and (= (__f1 a!3) pipe_reaction_0)
                                       (not (<= k i))
                                       (not (<= j k))))))
                                :skolemid _skolem_19
                                :qid _exists_7))))
                (let ((a!2 (ite (= i 3)
                                (__f4 initial_2_trace)
                                (ite (= i 4)
                                     (__f5 initial_2_trace)
                                     (ite (= i 5) (__f6 initial_2_trace) a!1))))
                      (a!4 (ite (= j 3)
                                (__f4 initial_2_trace)
                                (ite (= j 4)
                                     (__f5 initial_2_trace)
                                     (ite (= j 5) (__f6 initial_2_trace) a!1)))))
                (let ((a!3 (ite (= i 0)
                                (__f1 initial_2_trace)
                                (ite (= i 1)
                                     (__f2 initial_2_trace)
                                     (ite (= i 2) (__f3 initial_2_trace) a!2))))
                      (a!5 (ite (= j 0)
                                (__f1 initial_2_trace)
                                (ite (= j 1)
                                     (__f2 initial_2_trace)
                                     (ite (= j 2) (__f3 initial_2_trace) a!4)))))
                (let ((a!7 (not (and (>= i 0)
                                     (<= i 5)
                                     (>= j 0)
                                     (<= j 5)
                                     (not (<= j i))
                                     (= (__f1 a!3) pipe_reaction_0)
                                     (= (__f1 a!5) pipe_reaction_0)
                                     (not a!6))))
                      (a!8 (_tuple_1 (+ 1000000000 (__f1 (__f2 a!3))) 0)))
                (let ((a!9 (ite (<= 0 (__f1 (__f2 a!3))) a!8 (_tuple_1 (- 1) 0))))
                  (or a!7 (= (__f2 a!5) a!9)))))))
                :skolemid _skolem_20
                :qid _forall_12)))
      (a!3 (exists ((b Int) (a Int))
             (! (let ((a!1 (_tuple_0 NULL
                                     (_tuple_1 (- 1) 0)
                                     (_tuple_2 0 0 0 0 0)))
                      (a!6 (exists ((c Int))
                             (! (let ((a!1 (_tuple_0 NULL
                                                     (_tuple_1 (- 1) 0)
                                                     (_tuple_2 0 0 0 0 0))))
                                (let ((a!2 (ite (= c 3)
                                                (__f4 initial_2_trace)
                                                (ite (= c 4)
                                                     (__f5 initial_2_trace)
                                                     (ite (= c 5)
                                                          (__f6 initial_2_trace)
                                                          a!1))))
                                      (a!4 (ite (= a 3)
                                                (__f4 initial_2_trace)
                                                (ite (= a 4)
                                                     (__f5 initial_2_trace)
                                                     (ite (= a 5)
                                                          (__f6 initial_2_trace)
                                                          a!1)))))
                                (let ((a!3 (ite (= c 0)
                                                (__f1 initial_2_trace)
                                                (ite (= c 1)
                                                     (__f2 initial_2_trace)
                                                     (ite (= c 2)
                                                          (__f3 initial_2_trace)
                                                          a!2))))
                                      (a!5 (ite (= a 0)
                                                (__f1 initial_2_trace)
                                                (ite (= a 1)
                                                     (__f2 initial_2_trace)
                                                     (ite (= a 2)
                                                          (__f3 initial_2_trace)
                                                          a!4)))))
                                  (and (>= c 0)
                                       (<= c 5)
                                       (= (__f1 a!3) (__f1 a!5))
                                       (not (<= c a))
                                       (not (<= b c))))))
                                :skolemid _skolem_21
                                :qid _exists_8))))
                (let ((a!2 (ite (= b 3)
                                (__f4 initial_2_trace)
                                (ite (= b 4)
                                     (__f5 initial_2_trace)
                                     (ite (= b 5) (__f6 initial_2_trace) a!1))))
                      (a!4 (ite (= a 3)
                                (__f4 initial_2_trace)
                                (ite (= a 4)
                                     (__f5 initial_2_trace)
                                     (ite (= a 5) (__f6 initial_2_trace) a!1)))))
                (let ((a!3 (ite (= b 0)
                                (__f1 initial_2_trace)
                                (ite (= b 1)
                                     (__f2 initial_2_trace)
                                     (ite (= b 2) (__f3 initial_2_trace) a!2))))
                      (a!5 (ite (= a 0)
                                (__f1 initial_2_trace)
                                (ite (= a 1)
                                     (__f2 initial_2_trace)
                                     (ite (= a 2) (__f3 initial_2_trace) a!4)))))
                (let ((a!7 (not (<= 0 (__f1 (__f2 a!3)))))
                      (a!8 (_tuple_1 (+ 1000000000 (__f1 (__f2 a!5))) 0)))
                (let ((a!9 (ite (<= 0 (__f1 (__f2 a!5))) a!8 (_tuple_1 (- 1) 0))))
                (let ((a!10 (not (<= (__f2 (__f2 a!3)) (__f2 a!9))))
                      (a!12 (not (<= (__f1 (__f2 a!3)) (__f1 a!9)))))
                (let ((a!11 (and (= (__f1 (__f2 a!3)) (__f1 a!9)) a!10)))
                (let ((a!13 (or (and a!7 (<= 0 (__f1 a!9))) a!11 a!12)))
                  (and (>= a 0)
                       (<= a 5)
                       (>= b 0)
                       (<= b 5)
                       (not (= (__f1 a!3) pipe_reaction_0))
                       (= (__f1 a!5) pipe_reaction_0)
                       (not a!6)
                       a!13)))))))))
                :skolemid _skolem_22
                :qid _exists_9))))
  (and a!1 a!2 (not a!3))))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 5))))
           (a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (_tuple_0 NULL
                                    (_tuple_1 (- 1) 0)
                                    (_tuple_2 0 0 0 0 0))))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2)))))
     (let ((a!4 (__f1 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3)))))
       (or a!1 (>= a!4 0)))))
     :skolemid _skolem_23
     :qid _forall_13)))
(assert (forall ((j Int))
  (! (let ((a!1 (not (and (not (<= j 0)) (<= j 5))))
           (a!2 (ite (= j 4)
                     (__f5 initial_2_trace)
                     (ite (= j 5)
                          (__f6 initial_2_trace)
                          (_tuple_0 NULL
                                    (_tuple_1 (- 1) 0)
                                    (_tuple_2 0 0 0 0 0))))))
     (let ((a!3 (ite (= j 1)
                     (__f2 initial_2_trace)
                     (ite (= j 2)
                          (__f3 initial_2_trace)
                          (ite (= j 3) (__f4 initial_2_trace) a!2)))))
     (let ((a!4 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!3)) NULL)))
       (or a!1
           a!4
           (forall ((i Int))
             (! (let ((a!1 (not (and (not (<= i 0)) (not (<= j i)))))
                      (a!2 (ite (= i 4)
                                (__f5 initial_2_trace)
                                (ite (= i 5)
                                     (__f6 initial_2_trace)
                                     (_tuple_0 NULL
                                               (_tuple_1 (- 1) 0)
                                               (_tuple_2 0 0 0 0 0))))))
                (let ((a!3 (ite (= i 1)
                                (__f2 initial_2_trace)
                                (ite (= i 2)
                                     (__f3 initial_2_trace)
                                     (ite (= i 3) (__f4 initial_2_trace) a!2)))))
                (let ((a!4 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                              NULL)))
                  (or a!1 (not a!4)))))
                :skolemid _skolem_24
                :qid _forall_14))))))
     :skolemid _skolem_25
     :qid _forall_15)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 5))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!3 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!2))))
           (a!5 (ite (= i 4)
                     (__f4 initial_2_trace)
                     (ite (= i 5)
                          (__f5 initial_2_trace)
                          (ite (= i 6) (__f6 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!3))))
           (a!6 (ite (= i 1)
                     (__f1 initial_2_trace)
                     (ite (= i 2)
                          (__f2 initial_2_trace)
                          (ite (= i 3) (__f3 initial_2_trace) a!5)))))
       (or a!1
           (= (__f1 a!4) pipe_node_1_reaction_1)
           (= (__f4 (__f3 a!4)) (__f4 (__f3 a!6)))))))
     :skolemid _skolem_26
     :qid _forall_16)))
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!2 (ite (= i 3)
                     (__f4 initial_2_trace)
                     (ite (= i 4)
                          (__f5 initial_2_trace)
                          (ite (= i 5) (__f6 initial_2_trace) a!1))))
           (a!4 (ite (= j 3)
                     (__f4 initial_2_trace)
                     (ite (= j 4)
                          (__f5 initial_2_trace)
                          (ite (= j 5) (__f6 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 0)
                     (__f1 initial_2_trace)
                     (ite (= i 1)
                          (__f2 initial_2_trace)
                          (ite (= i 2) (__f3 initial_2_trace) a!2))))
           (a!5 (ite (= j 0)
                     (__f1 initial_2_trace)
                     (ite (= j 1)
                          (__f2 initial_2_trace)
                          (ite (= j 2) (__f3 initial_2_trace) a!4)))))
     (let ((a!6 (not (and (= (__f1 a!3) (__f1 a!5)) (not (= i j))))))
       (or (not (and (>= i 0) (<= i 5) (>= j 0) (<= j 5)))
           (not (= (__f2 a!3) (__f2 a!5)))
           a!6)))))
     :skolemid _skolem_27
     :qid _forall_17)))
(assert (let ((a!1 (= (__f1 (__f3 (__f1 initial_2_trace))) 0))
      (a!2 (= (__f2 (__f3 (__f1 initial_2_trace))) 0))
      (a!3 (= (__f3 (__f3 (__f1 initial_2_trace))) 0))
      (a!4 (= (__f4 (__f3 (__f1 initial_2_trace))) 0))
      (a!5 (= (__f5 (__f3 (__f1 initial_2_trace))) 0))
      (a!7 (forall ((i Int))
             (! (let ((a!1 (ite (= i 4)
                                (__f5 initial_2_trace)
                                (ite (= i 5)
                                     (__f6 initial_2_trace)
                                     (_tuple_0 NULL
                                               (_tuple_1 (- 1) 0)
                                               (_tuple_2 0 0 0 0 0))))))
                (let ((a!2 (ite (= i 1)
                                (__f2 initial_2_trace)
                                (ite (= i 2)
                                     (__f3 initial_2_trace)
                                     (ite (= i 3) (__f4 initial_2_trace) a!1)))))
                (let ((a!3 (__f2 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!2))))
                      (a!4 (__f1 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!2))))
                      (a!5 (__f2 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!2))))
                      (a!6 (= (__f2 (ite (= i 0) (__f1 initial_2_trace) a!2))
                              (_tuple_1 initial_1_start 0))))
                (let ((a!7 (or (and (not (<= 0 a!4)) (<= 0 initial_1_start))
                               (and (= a!4 initial_1_start) (not (<= a!5 0)))
                               (not (<= a!4 initial_1_start))
                               a!6)))
                  (or (not (and (>= i 0) (<= i 0)))
                      (and (<= a!3 1) (>= a!3 0) a!7))))))
                :skolemid _skolem_28
                :qid _forall_18))))
(let ((a!6 (and (= initial_1_start 0)
                (= (__f1 (__f1 initial_2_trace)) NULL)
                (= (__f2 (__f1 initial_2_trace)) (_tuple_1 0 0))
                a!1
                a!2
                a!3
                a!4
                a!5)))
  (not (or (not a!6) a!7)))))


(check-sat)
(get-info :all-statistics)
(get-model)
