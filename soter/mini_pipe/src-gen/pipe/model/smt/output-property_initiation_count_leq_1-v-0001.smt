(declare-datatypes ((_tuple_2 0)) (((_tuple_2 (__f1 Int) (__f2 Int) (__f3 Int) (__f4 Int) (__f5 Int)))))
(declare-datatypes ((_tuple_1 0)) (((_tuple_1 (__f1 Int) (__f2 Int)))))
(declare-datatypes ((_enum_0 0)) (((pipe_reaction_0) (pipe_reaction_1) (pipe_node_1_reaction_1) (pipe_node_1_reaction_0) (NULL))))
(declare-datatypes ((_tuple_0 0)) (((_tuple_0 (__f1 _enum_0) (__f2 _tuple_1) (__f3 _tuple_2)))))
(declare-datatypes ((_tuple_3 0)) (((_tuple_3 (__f1 _tuple_0) (__f2 _tuple_0) (__f3 _tuple_0) (__f4 _tuple_0) (__f5 _tuple_0) (__f6 _tuple_0) (__f7 _tuple_0)))))
(declare-fun initial_2_trace () _tuple_3)
(declare-fun initial_1_start () Int)
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!1))))
           (a!4 (ite (= j 4)
                     (__f5 initial_2_trace)
                     (ite (= j 5)
                          (__f6 initial_2_trace)
                          (ite (= j 6) (__f7 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2))))
           (a!5 (ite (= j 1)
                     (__f2 initial_2_trace)
                     (ite (= j 2)
                          (__f3 initial_2_trace)
                          (ite (= j 3) (__f4 initial_2_trace) a!4)))))
     (let ((a!6 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   (__f1 (ite (= j 0) (__f1 initial_2_trace) a!5))))
           (a!8 (= (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   (__f2 (ite (= j 0) (__f1 initial_2_trace) a!5)))))
     (let ((a!7 (not (and a!6 (not (= i j))))))
       (or (not (and (>= i 0) (<= i 6) (>= j 0) (<= j 6))) a!7 (not a!8)))))))
     :skolemid _skolem_0
     :qid _forall_0)))
(assert (forall ((i Int) (j Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!1))))
           (a!4 (ite (= j 4)
                     (__f5 initial_2_trace)
                     (ite (= j 5)
                          (__f6 initial_2_trace)
                          (ite (= j 6) (__f7 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2))))
           (a!5 (ite (= j 1)
                     (__f2 initial_2_trace)
                     (ite (= j 2)
                          (__f3 initial_2_trace)
                          (ite (= j 3) (__f4 initial_2_trace) a!4)))))
     (let ((a!6 (= (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   (__f2 (ite (= j 0) (__f1 initial_2_trace) a!5))))
           (a!7 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   pipe_node_1_reaction_0))
           (a!8 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!5))
                   pipe_node_1_reaction_1))
           (a!9 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   pipe_node_1_reaction_1))
           (a!10 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!5))
                    pipe_reaction_1))
           (a!11 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                    pipe_reaction_0))
           (a!12 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!5))
                    pipe_node_1_reaction_0))
           (a!13 (__f1 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3))))
           (a!14 (__f1 (__f2 (ite (= j 0) (__f1 initial_2_trace) a!5))))
           (a!15 (__f2 (__f2 (ite (= j 0) (__f1 initial_2_trace) a!5))))
           (a!16 (__f2 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3)))))
     (let ((a!17 (or (and a!6 (or (and a!7 a!8) (and a!9 a!10) (and a!11 a!12)))
                     (and (<= 0 a!13) (not (<= 0 a!14)))
                     (and (= a!13 a!14) (not (<= a!15 a!16)))
                     (not (<= a!14 a!13)))))
       (or (not (and (>= i 0) (<= i 6) (>= j 0) (<= j 6)))
           (not (<= j i))
           (not a!17)))))))
     :skolemid _skolem_1
     :qid _forall_1)))
(assert (forall ((i Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
           (a!5 (not (and (not (<= i 0)) (<= i 6)))))
     (let ((a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!1))))
           (a!7 (ite (= i 5)
                     (__f5 initial_2_trace)
                     (ite (= i 6)
                          (__f6 initial_2_trace)
                          (ite (= i 7) (__f7 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2))))
           (a!8 (ite (= i 2)
                     (__f2 initial_2_trace)
                     (ite (= i 3)
                          (__f3 initial_2_trace)
                          (ite (= i 4) (__f4 initial_2_trace) a!7)))))
     (let ((a!4 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   pipe_node_1_reaction_1))
           (a!6 (__f5 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!3))))
           (a!9 (__f5 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!8)))))
       (or a!4 a!5 (= a!6 a!9))))))
     :skolemid _skolem_2
     :qid _forall_2)))
(assert (forall ((i Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2)))))
     (let ((a!4 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   pipe_node_1_reaction_1)))
       (or (not (and (>= i 0) (<= i 6)))
           (exists ((j Int))
             (! (let ((a!1 (_tuple_0 NULL
                                     (_tuple_1 (- 1) 0)
                                     (_tuple_2 0 0 0 0 0))))
                (let ((a!2 (ite (= j 4)
                                (__f5 initial_2_trace)
                                (ite (= j 5)
                                     (__f6 initial_2_trace)
                                     (ite (= j 6) (__f7 initial_2_trace) a!1))))
                      (a!5 (ite (= i 4)
                                (__f5 initial_2_trace)
                                (ite (= i 5)
                                     (__f6 initial_2_trace)
                                     (ite (= i 6) (__f7 initial_2_trace) a!1)))))
                (let ((a!3 (ite (= j 1)
                                (__f2 initial_2_trace)
                                (ite (= j 2)
                                     (__f3 initial_2_trace)
                                     (ite (= j 3) (__f4 initial_2_trace) a!2))))
                      (a!6 (ite (= i 1)
                                (__f2 initial_2_trace)
                                (ite (= i 2)
                                     (__f3 initial_2_trace)
                                     (ite (= i 3) (__f4 initial_2_trace) a!5)))))
                (let ((a!4 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!3))
                              pipe_node_1_reaction_0))
                      (a!7 (__f1 (__f2 (ite (= j 0) (__f1 initial_2_trace) a!3))))
                      (a!8 (__f2 (__f2 (ite (= j 0) (__f1 initial_2_trace) a!3)))))
                (let ((a!9 (= (__f2 (ite (= i 0) (__f1 initial_2_trace) a!6))
                              (ite (<= 0 a!7)
                                   (_tuple_1 a!7 (+ 1 a!8))
                                   (_tuple_1 (- 1) 0)))))
                  (and (>= j 0) (<= j 6) a!4 a!9))))))
                :skolemid _skolem_3
                :qid _exists_0))
           (not a!4))))))
     :skolemid _skolem_4
     :qid _forall_3)))
(assert (forall ((j Int))
  (! (let ((a!1 (not (and (not (<= j 0)) (<= j 6))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!3 (ite (= j 4)
                     (__f5 initial_2_trace)
                     (ite (= j 5)
                          (__f6 initial_2_trace)
                          (ite (= j 6) (__f7 initial_2_trace) a!2))))
           (a!6 (ite (= j 5)
                     (__f5 initial_2_trace)
                     (ite (= j 6)
                          (__f6 initial_2_trace)
                          (ite (= j 7) (__f7 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= j 1)
                     (__f2 initial_2_trace)
                     (ite (= j 2)
                          (__f3 initial_2_trace)
                          (ite (= j 3) (__f4 initial_2_trace) a!3))))
           (a!7 (ite (= j 2)
                     (__f2 initial_2_trace)
                     (ite (= j 3)
                          (__f3 initial_2_trace)
                          (ite (= j 4) (__f4 initial_2_trace) a!6)))))
     (let ((a!5 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!4)) NULL))
           (a!8 (= (__f3 (ite (= j 0) (__f1 initial_2_trace) a!4))
                   (__f3 (ite (= j 1) (__f1 initial_2_trace) a!7)))))
       (or a!1 (not a!5) a!8)))))
     :skolemid _skolem_5
     :qid _forall_4)))
(assert true)
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 6))))
           (a!2 (ite (= i 5)
                     (__f6 initial_2_trace)
                     (ite (= i 6)
                          (__f7 initial_2_trace)
                          (_tuple_0 NULL
                                    (_tuple_1 (- 1) 0)
                                    (_tuple_2 0 0 0 0 0))))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace)
                     (ite (= i 3)
                          (__f4 initial_2_trace)
                          (ite (= i 4) (__f5 initial_2_trace) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace)
                           (ite (= i 1) (__f2 initial_2_trace) a!3)))))
     (let ((a!5 (and (not (<= 0 (__f1 a!4))) (<= 0 initial_1_start)))
           (a!6 (and (= (__f1 a!4) initial_1_start) (not (<= (__f2 a!4) 0)))))
       (or a!1
           a!5
           a!6
           (not (<= (__f1 a!4) initial_1_start))
           (= a!4 (_tuple_1 initial_1_start 0)))))))
     :skolemid _skolem_7
     :qid _forall_6)))
(assert (forall ((i Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2)))))
     (let ((a!4 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   pipe_reaction_1)))
       (or (not (and (>= i 0) (<= i 6)))
           (not a!4)
           (exists ((j Int))
             (! (let ((a!1 (_tuple_0 NULL
                                     (_tuple_1 (- 1) 0)
                                     (_tuple_2 0 0 0 0 0))))
                (let ((a!2 (ite (= j 4)
                                (__f5 initial_2_trace)
                                (ite (= j 5)
                                     (__f6 initial_2_trace)
                                     (ite (= j 6) (__f7 initial_2_trace) a!1))))
                      (a!5 (ite (= i 4)
                                (__f5 initial_2_trace)
                                (ite (= i 5)
                                     (__f6 initial_2_trace)
                                     (ite (= i 6) (__f7 initial_2_trace) a!1)))))
                (let ((a!3 (ite (= j 1)
                                (__f2 initial_2_trace)
                                (ite (= j 2)
                                     (__f3 initial_2_trace)
                                     (ite (= j 3) (__f4 initial_2_trace) a!2))))
                      (a!6 (ite (= i 1)
                                (__f2 initial_2_trace)
                                (ite (= i 2)
                                     (__f3 initial_2_trace)
                                     (ite (= i 3) (__f4 initial_2_trace) a!5)))))
                (let ((a!4 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!3))
                              pipe_node_1_reaction_1))
                      (a!7 (__f1 (__f2 (ite (= j 0) (__f1 initial_2_trace) a!3))))
                      (a!8 (__f2 (__f2 (ite (= j 0) (__f1 initial_2_trace) a!3)))))
                (let ((a!9 (= (__f2 (ite (= i 0) (__f1 initial_2_trace) a!6))
                              (ite (<= 0 a!7)
                                   (_tuple_1 a!7 a!8)
                                   (_tuple_1 (- 1) 0)))))
                  (and (>= j 0) (<= j 6) a!4 a!9))))))
                :skolemid _skolem_8
                :qid _exists_1)))))))
     :skolemid _skolem_9
     :qid _forall_7)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 6))))
           (a!2 (ite (= i 5)
                     (__f6 initial_2_trace)
                     (ite (= i 6)
                          (__f7 initial_2_trace)
                          (_tuple_0 NULL
                                    (_tuple_1 (- 1) 0)
                                    (_tuple_2 0 0 0 0 0))))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace)
                     (ite (= i 3)
                          (__f4 initial_2_trace)
                          (ite (= i 4) (__f5 initial_2_trace) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace)
                           (ite (= i 1) (__f2 initial_2_trace) a!3)))))
       (or a!1 (>= (__f1 a!4) 0)))))
     :skolemid _skolem_10
     :qid _forall_8)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 6))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!3 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!2))))
           (a!9 (ite (= i 5)
                     (__f5 initial_2_trace)
                     (ite (= i 6)
                          (__f6 initial_2_trace)
                          (ite (= i 7) (__f7 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!3))))
           (a!10 (ite (= i 2)
                      (__f2 initial_2_trace)
                      (ite (= i 3)
                           (__f3 initial_2_trace)
                           (ite (= i 4) (__f4 initial_2_trace) a!9)))))
     (let ((a!5 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!4))
                   pipe_node_1_reaction_1))
           (a!6 (__f5 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!7 (__f3 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!8 (__f2 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!11 (__f2 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!10))))
           (a!12 (__f1 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!13 (__f1 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!10))))
           (a!14 (__f4 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!15 (__f4 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!10)))))
       (or a!1
           (not a!5)
           (and (= a!6 a!7) (= a!8 (+ (- 1) a!11)) (= a!12 a!13) (= a!14 a!15)))))))
     :skolemid _skolem_11
     :qid _forall_9)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 6))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
           (a!12 (exists ((j Int))
                   (! (let ((a!1 (_tuple_0 NULL
                                           (_tuple_1 (- 1) 0)
                                           (_tuple_2 0 0 0 0 0))))
                      (let ((a!2 (ite (= j 4)
                                      (__f5 initial_2_trace)
                                      (ite (= j 5)
                                           (__f6 initial_2_trace)
                                           (ite (= j 6)
                                                (__f7 initial_2_trace)
                                                a!1))))
                            (a!5 (ite (= i 4)
                                      (__f5 initial_2_trace)
                                      (ite (= i 5)
                                           (__f6 initial_2_trace)
                                           (ite (= i 6)
                                                (__f7 initial_2_trace)
                                                a!1)))))
                      (let ((a!3 (ite (= j 1)
                                      (__f2 initial_2_trace)
                                      (ite (= j 2)
                                           (__f3 initial_2_trace)
                                           (ite (= j 3)
                                                (__f4 initial_2_trace)
                                                a!2))))
                            (a!6 (ite (= i 1)
                                      (__f2 initial_2_trace)
                                      (ite (= i 2)
                                           (__f3 initial_2_trace)
                                           (ite (= i 3)
                                                (__f4 initial_2_trace)
                                                a!5)))))
                      (let ((a!4 (= (__f1 (ite (= j 0)
                                               (__f1 initial_2_trace)
                                               a!3))
                                    pipe_node_1_reaction_1))
                            (a!7 (__f1 (__f2 (ite (= i 0)
                                                  (__f1 initial_2_trace)
                                                  a!6))))
                            (a!8 (__f2 (__f2 (ite (= i 0)
                                                  (__f1 initial_2_trace)
                                                  a!6)))))
                      (let ((a!9 (= (__f2 (ite (= j 0)
                                               (__f1 initial_2_trace)
                                               a!3))
                                    (ite (<= 0 a!7)
                                         (_tuple_1 a!7 (+ 1 a!8))
                                         (_tuple_1 (- 1) 0)))))
                        (and (not (<= j i)) (<= j 6) a!4 a!9))))))
                      :skolemid _skolem_12
                      :qid _exists_2))))
     (let ((a!3 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!2))))
           (a!9 (ite (= i 5)
                     (__f5 initial_2_trace)
                     (ite (= i 6)
                          (__f6 initial_2_trace)
                          (ite (= i 7) (__f7 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!3))))
           (a!10 (ite (= i 2)
                      (__f2 initial_2_trace)
                      (ite (= i 3)
                           (__f3 initial_2_trace)
                           (ite (= i 4) (__f4 initial_2_trace) a!9)))))
     (let ((a!5 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!4))
                   pipe_node_1_reaction_0))
           (a!6 (__f3 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!7 (__f4 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!8 (__f2 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!11 (__f2 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!10))))
           (a!13 (__f1 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!14 (__f1 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!10))))
           (a!15 (__f5 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!16 (__f5 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!10)))))
       (or a!1
           (not a!5)
           (and (= a!6 a!7) (= a!8 (+ 1 a!11)) a!12 (= a!13 a!14) (= a!15 a!16)))))))
     :skolemid _skolem_13
     :qid _forall_10)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 6))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
           (a!11 (exists ((j Int))
                   (! (let ((a!1 (_tuple_0 NULL
                                           (_tuple_1 (- 1) 0)
                                           (_tuple_2 0 0 0 0 0))))
                      (let ((a!2 (ite (= j 4)
                                      (__f5 initial_2_trace)
                                      (ite (= j 5)
                                           (__f6 initial_2_trace)
                                           (ite (= j 6)
                                                (__f7 initial_2_trace)
                                                a!1))))
                            (a!5 (ite (= i 4)
                                      (__f5 initial_2_trace)
                                      (ite (= i 5)
                                           (__f6 initial_2_trace)
                                           (ite (= i 6)
                                                (__f7 initial_2_trace)
                                                a!1)))))
                      (let ((a!3 (ite (= j 1)
                                      (__f2 initial_2_trace)
                                      (ite (= j 2)
                                           (__f3 initial_2_trace)
                                           (ite (= j 3)
                                                (__f4 initial_2_trace)
                                                a!2))))
                            (a!6 (ite (= i 1)
                                      (__f2 initial_2_trace)
                                      (ite (= i 2)
                                           (__f3 initial_2_trace)
                                           (ite (= i 3)
                                                (__f4 initial_2_trace)
                                                a!5)))))
                      (let ((a!4 (= (__f1 (ite (= j 0)
                                               (__f1 initial_2_trace)
                                               a!3))
                                    pipe_node_1_reaction_0))
                            (a!7 (= (__f2 (ite (= j 0)
                                               (__f1 initial_2_trace)
                                               a!3))
                                    (__f2 (ite (= i 0)
                                               (__f1 initial_2_trace)
                                               a!6)))))
                        (and (not (<= j i)) (<= j 6) a!4 a!7)))))
                      :skolemid _skolem_14
                      :qid _exists_3))))
     (let ((a!3 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!2))))
           (a!8 (ite (= i 5)
                     (__f5 initial_2_trace)
                     (ite (= i 6)
                          (__f6 initial_2_trace)
                          (ite (= i 7) (__f7 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!3))))
           (a!9 (ite (= i 2)
                     (__f2 initial_2_trace)
                     (ite (= i 3)
                          (__f3 initial_2_trace)
                          (ite (= i 4) (__f4 initial_2_trace) a!8)))))
     (let ((a!5 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!4))
                   pipe_reaction_0))
           (a!6 (__f4 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!7 (__f1 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!10 (__f1 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!9))))
           (a!12 (__f2 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!13 (__f2 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!9))))
           (a!14 (__f3 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!15 (__f3 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!9))))
           (a!16 (__f5 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!17 (__f5 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!9)))))
       (or a!1
           (not a!5)
           (and (= a!6 a!7)
                (= a!7 (+ 1 a!10))
                a!11
                (= a!12 a!13)
                (= a!14 a!15)
                (= a!16 a!17)))))))
     :skolemid _skolem_15
     :qid _forall_11)))
(assert (forall ((j Int))
  (! (let ((a!1 (not (and (not (<= j 0)) (<= j 6))))
           (a!2 (ite (= j 5)
                     (__f6 initial_2_trace)
                     (ite (= j 6)
                          (__f7 initial_2_trace)
                          (_tuple_0 NULL
                                    (_tuple_1 (- 1) 0)
                                    (_tuple_2 0 0 0 0 0)))))
           (a!5 (forall ((i Int))
                  (! (let ((a!1 (not (and (not (<= i 0)) (not (<= j i)))))
                           (a!2 (ite (= i 5)
                                     (__f6 initial_2_trace)
                                     (ite (= i 6)
                                          (__f7 initial_2_trace)
                                          (_tuple_0 NULL
                                                    (_tuple_1 (- 1) 0)
                                                    (_tuple_2 0 0 0 0 0))))))
                     (let ((a!3 (ite (= i 2)
                                     (__f3 initial_2_trace)
                                     (ite (= i 3)
                                          (__f4 initial_2_trace)
                                          (ite (= i 4)
                                               (__f5 initial_2_trace)
                                               a!2)))))
                     (let ((a!4 (__f1 (ite (= i 0)
                                           (__f1 initial_2_trace)
                                           (ite (= i 1)
                                                (__f2 initial_2_trace)
                                                a!3)))))
                       (or a!1 (not (= a!4 NULL))))))
                     :skolemid _skolem_16
                     :qid _forall_12))))
     (let ((a!3 (ite (= j 2)
                     (__f3 initial_2_trace)
                     (ite (= j 3)
                          (__f4 initial_2_trace)
                          (ite (= j 4) (__f5 initial_2_trace) a!2)))))
     (let ((a!4 (__f1 (ite (= j 0)
                           (__f1 initial_2_trace)
                           (ite (= j 1) (__f2 initial_2_trace) a!3)))))
       (or a!1 (= a!4 NULL) a!5))))
     :skolemid _skolem_17
     :qid _forall_13)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 6))))
           (a!2 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!3 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!2))))
           (a!6 (ite (= i 5)
                     (__f5 initial_2_trace)
                     (ite (= i 6)
                          (__f6 initial_2_trace)
                          (ite (= i 7) (__f7 initial_2_trace) a!2)))))
     (let ((a!4 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!3))))
           (a!7 (ite (= i 2)
                     (__f2 initial_2_trace)
                     (ite (= i 3)
                          (__f3 initial_2_trace)
                          (ite (= i 4) (__f4 initial_2_trace) a!6)))))
     (let ((a!5 (__f4 (__f3 (ite (= i 0) (__f1 initial_2_trace) a!4))))
           (a!8 (__f4 (__f3 (ite (= i 1) (__f1 initial_2_trace) a!7))))
           (a!9 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!4))
                   pipe_reaction_0)))
       (or a!1 (= a!5 a!8) a!9)))))
     :skolemid _skolem_18
     :qid _forall_14)))
(assert (forall ((i Int))
  (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0))))
     (let ((a!2 (ite (= i 4)
                     (__f5 initial_2_trace)
                     (ite (= i 5)
                          (__f6 initial_2_trace)
                          (ite (= i 6) (__f7 initial_2_trace) a!1)))))
     (let ((a!3 (ite (= i 1)
                     (__f2 initial_2_trace)
                     (ite (= i 2)
                          (__f3 initial_2_trace)
                          (ite (= i 3) (__f4 initial_2_trace) a!2)))))
     (let ((a!4 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                   pipe_node_1_reaction_0)))
       (or (not (and (>= i 0) (<= i 6)))
           (not a!4)
           (exists ((j Int))
             (! (let ((a!1 (_tuple_0 NULL
                                     (_tuple_1 (- 1) 0)
                                     (_tuple_2 0 0 0 0 0))))
                (let ((a!2 (ite (= j 4)
                                (__f5 initial_2_trace)
                                (ite (= j 5)
                                     (__f6 initial_2_trace)
                                     (ite (= j 6) (__f7 initial_2_trace) a!1))))
                      (a!5 (ite (= i 4)
                                (__f5 initial_2_trace)
                                (ite (= i 5)
                                     (__f6 initial_2_trace)
                                     (ite (= i 6) (__f7 initial_2_trace) a!1)))))
                (let ((a!3 (ite (= j 1)
                                (__f2 initial_2_trace)
                                (ite (= j 2)
                                     (__f3 initial_2_trace)
                                     (ite (= j 3) (__f4 initial_2_trace) a!2))))
                      (a!6 (ite (= i 1)
                                (__f2 initial_2_trace)
                                (ite (= i 2)
                                     (__f3 initial_2_trace)
                                     (ite (= i 3) (__f4 initial_2_trace) a!5)))))
                (let ((a!4 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!3))
                              pipe_reaction_0))
                      (a!7 (__f1 (__f2 (ite (= j 0) (__f1 initial_2_trace) a!3))))
                      (a!8 (__f2 (__f2 (ite (= j 0) (__f1 initial_2_trace) a!3)))))
                (let ((a!9 (= (__f2 (ite (= i 0) (__f1 initial_2_trace) a!6))
                              (ite (<= 0 a!7)
                                   (_tuple_1 a!7 a!8)
                                   (_tuple_1 (- 1) 0)))))
                  (and (>= j 0) (<= j 6) a!4 a!9))))))
                :skolemid _skolem_19
                :qid _exists_4)))))))
     :skolemid _skolem_20
     :qid _forall_15)))
(assert (let ((a!1 (not (exists ((b Int) (a Int))
                  (! (let ((a!1 (_tuple_0 NULL
                                          (_tuple_1 (- 1) 0)
                                          (_tuple_2 0 0 0 0 0)))
                           (a!8 (exists ((c Int))
                                  (! (let ((a!1 (_tuple_0 NULL
                                                          (_tuple_1 (- 1) 0)
                                                          (_tuple_2 0 0 0 0 0))))
                                     (let ((a!2 (ite (= c 4)
                                                     (__f5 initial_2_trace)
                                                     (ite (= c 5)
                                                          (__f6 initial_2_trace)
                                                          (ite (= c 6)
                                                               (__f7 initial_2_trace)
                                                               a!1))))
                                           (a!4 (ite (= a 4)
                                                     (__f5 initial_2_trace)
                                                     (ite (= a 5)
                                                          (__f6 initial_2_trace)
                                                          (ite (= a 6)
                                                               (__f7 initial_2_trace)
                                                               a!1)))))
                                     (let ((a!3 (ite (= c 1)
                                                     (__f2 initial_2_trace)
                                                     (ite (= c 2)
                                                          (__f3 initial_2_trace)
                                                          (ite (= c 3)
                                                               (__f4 initial_2_trace)
                                                               a!2))))
                                           (a!5 (ite (= a 1)
                                                     (__f2 initial_2_trace)
                                                     (ite (= a 2)
                                                          (__f3 initial_2_trace)
                                                          (ite (= a 3)
                                                               (__f4 initial_2_trace)
                                                               a!4)))))
                                     (let ((a!6 (= (__f1 (ite (= c 0)
                                                              (__f1 initial_2_trace)
                                                              a!3))
                                                   (__f1 (ite (= a 0)
                                                              (__f1 initial_2_trace)
                                                              a!5)))))
                                       (and (>= c 0)
                                            (<= c 6)
                                            a!6
                                            (not (<= c a))
                                            (not (<= b c)))))))
                                     :skolemid _skolem_25
                                     :qid _exists_8))))
                     (let ((a!2 (ite (= b 4)
                                     (__f5 initial_2_trace)
                                     (ite (= b 5)
                                          (__f6 initial_2_trace)
                                          (ite (= b 6)
                                               (__f7 initial_2_trace)
                                               a!1))))
                           (a!5 (ite (= a 4)
                                     (__f5 initial_2_trace)
                                     (ite (= a 5)
                                          (__f6 initial_2_trace)
                                          (ite (= a 6)
                                               (__f7 initial_2_trace)
                                               a!1)))))
                     (let ((a!3 (ite (= b 1)
                                     (__f2 initial_2_trace)
                                     (ite (= b 2)
                                          (__f3 initial_2_trace)
                                          (ite (= b 3)
                                               (__f4 initial_2_trace)
                                               a!2))))
                           (a!6 (ite (= a 1)
                                     (__f2 initial_2_trace)
                                     (ite (= a 2)
                                          (__f3 initial_2_trace)
                                          (ite (= a 3)
                                               (__f4 initial_2_trace)
                                               a!5)))))
                     (let ((a!4 (= (__f1 (ite (= b 0)
                                              (__f1 initial_2_trace)
                                              a!3))
                                   pipe_reaction_0))
                           (a!7 (= (__f1 (ite (= a 0)
                                              (__f1 initial_2_trace)
                                              a!6))
                                   pipe_reaction_0))
                           (a!9 (__f1 (__f2 (ite (= b 0)
                                                 (__f1 initial_2_trace)
                                                 a!3))))
                           (a!10 (__f1 (__f2 (ite (= a 0)
                                                  (__f1 initial_2_trace)
                                                  a!6))))
                           (a!12 (__f2 (__f2 (ite (= b 0)
                                                  (__f1 initial_2_trace)
                                                  a!3)))))
                     (let ((a!11 (ite (<= 0 a!10)
                                      (_tuple_1 (+ 1000000000 a!10) 0)
                                      (_tuple_1 (- 1) 0))))
                     (let ((a!13 (and (= a!9 (__f1 a!11))
                                      (not (<= a!12 (__f2 a!11))))))
                     (let ((a!14 (or (and (not (<= 0 a!9)) (<= 0 (__f1 a!11)))
                                     a!13
                                     (not (<= a!9 (__f1 a!11))))))
                       (and (>= a 0)
                            (<= a 6)
                            (>= b 0)
                            (<= b 6)
                            (not a!4)
                            a!7
                            (not a!8)
                            a!14))))))))
                     :skolemid _skolem_26
                     :qid _exists_9)))))
  (and (exists ((i Int))
         (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
                  (a!5 (exists ((c Int))
                         (! (let ((a!1 (_tuple_0 NULL
                                                 (_tuple_1 (- 1) 0)
                                                 (_tuple_2 0 0 0 0 0)))
                                  (a!5 (not (<= initial_1_start
                                                (+ (- 1000000000)
                                                   (* 1000000000 c))))))
                            (let ((a!2 (ite (= i 4)
                                            (__f5 initial_2_trace)
                                            (ite (= i 5)
                                                 (__f6 initial_2_trace)
                                                 (ite (= i 6)
                                                      (__f7 initial_2_trace)
                                                      a!1)))))
                            (let ((a!3 (ite (= i 1)
                                            (__f2 initial_2_trace)
                                            (ite (= i 2)
                                                 (__f3 initial_2_trace)
                                                 (ite (= i 3)
                                                      (__f4 initial_2_trace)
                                                      a!2)))))
                            (let ((a!4 (__f1 (__f2 (ite (= i 0)
                                                        (__f1 initial_2_trace)
                                                        a!3)))))
                              (and (= (* 1000000000 c) a!4) a!5)))))
                            :skolemid _skolem_21
                            :qid _exists_5))))
            (let ((a!2 (ite (= i 4)
                            (__f5 initial_2_trace)
                            (ite (= i 5)
                                 (__f6 initial_2_trace)
                                 (ite (= i 6) (__f7 initial_2_trace) a!1)))))
            (let ((a!3 (ite (= i 1)
                            (__f2 initial_2_trace)
                            (ite (= i 2)
                                 (__f3 initial_2_trace)
                                 (ite (= i 3) (__f4 initial_2_trace) a!2)))))
            (let ((a!4 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                          pipe_reaction_0))
                  (a!6 (__f2 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3)))))
              (and (>= i 0) (<= i 6) a!4 a!5 (= a!6 0))))))
            :skolemid _skolem_22
            :qid _exists_6))
       (forall ((i Int) (j Int))
         (! (let ((a!1 (_tuple_0 NULL (_tuple_1 (- 1) 0) (_tuple_2 0 0 0 0 0)))
                  (a!8 (exists ((k Int))
                         (! (let ((a!1 (_tuple_0 NULL
                                                 (_tuple_1 (- 1) 0)
                                                 (_tuple_2 0 0 0 0 0))))
                            (let ((a!2 (ite (= k 4)
                                            (__f5 initial_2_trace)
                                            (ite (= k 5)
                                                 (__f6 initial_2_trace)
                                                 (ite (= k 6)
                                                      (__f7 initial_2_trace)
                                                      a!1)))))
                            (let ((a!3 (ite (= k 1)
                                            (__f2 initial_2_trace)
                                            (ite (= k 2)
                                                 (__f3 initial_2_trace)
                                                 (ite (= k 3)
                                                      (__f4 initial_2_trace)
                                                      a!2)))))
                            (let ((a!4 (= (__f1 (ite (= k 0)
                                                     (__f1 initial_2_trace)
                                                     a!3))
                                          pipe_reaction_0)))
                              (and a!4 (not (<= k i)) (not (<= j k)))))))
                            :skolemid _skolem_23
                            :qid _exists_7))))
            (let ((a!2 (ite (= i 4)
                            (__f5 initial_2_trace)
                            (ite (= i 5)
                                 (__f6 initial_2_trace)
                                 (ite (= i 6) (__f7 initial_2_trace) a!1))))
                  (a!5 (ite (= j 4)
                            (__f5 initial_2_trace)
                            (ite (= j 5)
                                 (__f6 initial_2_trace)
                                 (ite (= j 6) (__f7 initial_2_trace) a!1)))))
            (let ((a!3 (ite (= i 1)
                            (__f2 initial_2_trace)
                            (ite (= i 2)
                                 (__f3 initial_2_trace)
                                 (ite (= i 3) (__f4 initial_2_trace) a!2))))
                  (a!6 (ite (= j 1)
                            (__f2 initial_2_trace)
                            (ite (= j 2)
                                 (__f3 initial_2_trace)
                                 (ite (= j 3) (__f4 initial_2_trace) a!5)))))
            (let ((a!4 (= (__f1 (ite (= i 0) (__f1 initial_2_trace) a!3))
                          pipe_reaction_0))
                  (a!7 (= (__f1 (ite (= j 0) (__f1 initial_2_trace) a!6))
                          pipe_reaction_0))
                  (a!10 (__f1 (__f2 (ite (= i 0) (__f1 initial_2_trace) a!3)))))
            (let ((a!9 (not (and (>= i 0)
                                 (<= i 6)
                                 (>= j 0)
                                 (<= j 6)
                                 (not (<= j i))
                                 a!4
                                 a!7
                                 (not a!8))))
                  (a!11 (= (__f2 (ite (= j 0) (__f1 initial_2_trace) a!6))
                           (ite (<= 0 a!10)
                                (_tuple_1 (+ 1000000000 a!10) 0)
                                (_tuple_1 (- 1) 0)))))
              (or a!9 a!11))))))
            :skolemid _skolem_24
            :qid _forall_16))
       a!1)))
(assert (forall ((i Int))
  (! (let ((a!1 (not (and (not (<= i 0)) (<= i 6))))
           (a!2 (ite (= i 5)
                     (__f6 initial_2_trace)
                     (ite (= i 6)
                          (__f7 initial_2_trace)
                          (_tuple_0 NULL
                                    (_tuple_1 (- 1) 0)
                                    (_tuple_2 0 0 0 0 0))))))
     (let ((a!3 (ite (= i 2)
                     (__f3 initial_2_trace)
                     (ite (= i 3)
                          (__f4 initial_2_trace)
                          (ite (= i 4) (__f5 initial_2_trace) a!2)))))
     (let ((a!4 (__f2 (ite (= i 0)
                           (__f1 initial_2_trace)
                           (ite (= i 1) (__f2 initial_2_trace) a!3)))))
       (or a!1 (>= (__f2 a!4) 0)))))
     :skolemid _skolem_27
     :qid _forall_17)))
(assert (let ((a!1 (= (__f1 (__f3 (__f1 initial_2_trace))) 0))
      (a!2 (= (__f2 (__f3 (__f1 initial_2_trace))) 0))
      (a!3 (= (__f3 (__f3 (__f1 initial_2_trace))) 0))
      (a!4 (= (__f4 (__f3 (__f1 initial_2_trace))) 0))
      (a!5 (= (__f5 (__f3 (__f1 initial_2_trace))) 0))
      (a!7 (forall ((i Int))
             (! (let ((a!1 (ite (= i 5)
                                (__f6 initial_2_trace)
                                (ite (= i 6)
                                     (__f7 initial_2_trace)
                                     (_tuple_0 NULL
                                               (_tuple_1 (- 1) 0)
                                               (_tuple_2 0 0 0 0 0))))))
                (let ((a!2 (ite (= i 2)
                                (__f3 initial_2_trace)
                                (ite (= i 3)
                                     (__f4 initial_2_trace)
                                     (ite (= i 4) (__f5 initial_2_trace) a!1)))))
                (let ((a!3 (ite (= i 0)
                                (__f1 initial_2_trace)
                                (ite (= i 1) (__f2 initial_2_trace) a!2))))
                (let ((a!4 (not (<= (__f2 (__f3 a!3)) 1)))
                      (a!5 (not (<= 0 (__f1 (__f2 a!3)))))
                      (a!6 (not (<= (__f2 (__f2 a!3)) 0)))
                      (a!8 (not (<= (__f1 (__f2 a!3)) initial_1_start)))
                      (a!9 (or (not (= (__f1 a!3) pipe_reaction_0))
                               (= (__f2 (__f3 a!3)) 0))))
                (let ((a!7 (and (= (__f1 (__f2 a!3)) initial_1_start) a!6)))
                (let ((a!10 (and a!4
                                 (or (and a!5 (<= 0 initial_1_start))
                                     a!7
                                     a!8
                                     (= (__f2 a!3) (_tuple_1 initial_1_start 0)))
                                 (>= (__f2 (__f3 a!3)) 0)
                                 a!9)))
                  (or (not (and (>= i 0) (<= i 1))) a!10)))))))
                :skolemid _skolem_28
                :qid _forall_18))))
(let ((a!6 (and (= initial_1_start 0)
                (= (__f1 (__f1 initial_2_trace)) NULL)
                (= (__f2 (__f1 initial_2_trace)) (_tuple_1 0 0))
                a!1
                a!2
                a!3
                a!4
                a!5)))
  (not (or (not a!6) a!7)))))


(check-sat)
(get-info :all-statistics)
(get-model)
