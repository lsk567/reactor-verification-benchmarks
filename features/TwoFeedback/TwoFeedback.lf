/* 
 * The case of two recurrent actions triggering
 * a single reaction is currently unhandled.
 * The challenge is distinguishing which action
 * is present, especially when they have period
 * values that allow them to overlap.
 *
 * See difficulty.ucl for details.
 */
target C {
    verification: {
        engine: uclid,
        induction: 3
    }
}

// @property("test", false)
// @bound("test", 5)
main reactor {
    // Both actions have an obligation to produce
    // the next action, but there is only one slot.
    // This can block the solver.
    logical action a(1 sec):int;
    logical action b(2 sec):int;

    // @inv(schedule(a, -1)
    //     /\ schedule(b, -1)
    // )
    reaction(startup, a, b) -> a, b {==}
}